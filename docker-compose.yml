version: '3'

services:
  new-site-db:
    container_name: ${CONTAINER_DB_NAME}
    image: ${DB_IMAGE:-mariadb}:${DB_VERSION:-latest}
    restart: unless-stopped
    volumes:
      - ${DB_FILES}:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  new-site-wordpress:
    depends_on:
      - new-site-db
    container_name: ${CONTAINER_SITE_NAME}
    image: ${SITE_IMAGE:-wordpress}:${SITE_VERSION:-latest}
    restart: unless-stopped
    volumes:
      - ${SITE_FILES}:/var/www/html
      - ./conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
    environment:
      WORDPRESS_DB_HOST: ${CONTAINER_DB_NAME}:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
      VIRTUAL_HOST: ${DOMAINS}
      LETSENCRYPT_HOST: ${DOMAINS}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    logging:
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-200k}

  wpcli:
    image: tatemz/wp-cli
    volumes:
      - ${SITE_FILES}:/var/www/html
    depends_on:
      - new-site-db
    entrypoint: wp

networks:
   default:
     external:
       name: ${NETWORK}


       
# version: '3'

# services:
#   db:
#     image: mysql:8.0
#     container_name: db
#     restart: unless-stopped
#     env_file: .env
#     environment:
#       - MYSQL_DATABASE=${MYSQL_DATABASE}
#     volumes: 
#       - dbdata:/var/lib/mysql
#     command: '--default-authentication-plugin=mysql_native_password'
#     networks:
#       - app-network

#   wordpress:
#     depends_on: 
#       - db
#     image: wordpress:5.1.1-fpm-alpine
#     container_name: wordpress
#     restart: unless-stopped
#     env_file: .env
#     environment:
#       - WORDPRESS_DB_HOST=db:3306
#       - WORDPRESS_DB_USER=${MYSQL_USER}
#       - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
#       - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
#     volumes:
#       - wordpress:/var/www/html
#     networks:
#       - app-network

#   webserver:
#     depends_on:
#       - wordpress
#     image: nginx:1.15.12-alpine
#     container_name: webserver
#     restart: unless-stopped
#     ports:
#       - "80:80"
#     volumes:
#       - wordpress:/var/www/html
#       - ./nginx-conf:/etc/nginx/conf.d
#       - certbot-etc:/etc/letsencrypt
#     networks:
#       - app-network

#   certbot:
#     depends_on:
#       - webserver
#     image: certbot/certbot
#     container_name: certbot
#     volumes:
#       - certbot-etc:/etc/letsencrypt
#       - wordpress:/var/www/html
#     command: certonly --webroot --webroot-path=/var/www/html --email contact@techlurn.org --agree-tos --no-eff-email --staging -d techlurn.org -d www.techlurn.org

# volumes:
#   certbot-etc:
#   wordpress:
#   dbdata:

# networks:
#   app-network:
#     driver: bridge